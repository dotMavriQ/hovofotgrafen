---
import Config from "../config.cjs";
export interface Props {
  url?: String;
  page: any;
}

const { url, page } = Astro.props;
const pagination = Math.ceil(page.total/page.size);
---

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <canvas id="myChart"></canvas>
  <script>
    const imageURLs = [
      'https://swtvmc.com/wp-content/uploads/2018/01/hoof-print-white-128.png',
      'https://i.pinimg.com/originals/0d/00/30/0d003071688a0953c9875fbaf2664a37.png'
    ];
    const images = imageURLs.map(v => {
      var image = new Image();
      image.src = v;
      return image;
    });

    new Chart('myChart', {
      type: 'pie',
      plugins: [{
        afterDatasetsDraw: chart => {
          var ctx = chart.ctx;
          ctx.save();
          var xCenter = chart.canvas.width / 2;
          var yCenter = chart.canvas.height / 2;
          var data = chart.config.data.datasets[0].data;
          var vTotal = data.reduce((a, b) => a + b, 0);
          data.forEach((v, i) => {
            var vAngle = data.slice(0, i).reduce((a, b) => a + b, 0) + v / 2;
            var angle = 360 / vTotal * vAngle - 90;
            var radians = angle * (Math.PI / 180);
            var r = yCenter;
            var x = xCenter + Math.cos(radians) * r / 2;
            var y = yCenter + Math.sin(radians) * r / 2;
            ctx.translate(x, y);
            var image = images[i];
            ctx.drawImage(image, -image.width / 2, -image.height / 2);
            ctx.translate(-x, -y);
          });
          ctx.restore();
        }
      }],
      data: {
        labels: ['hovar', 'f√∂tter'],
        datasets: [{
          label: 'My Dataset',
          data: [4, 2],
          backgroundColor: ['#A89984', '#EBDBB2']
        }]
      },
      options: {
        responsive: false,
        plugins: {
          legend: {
            display: false
          }
        }
      }
    });
  </script>